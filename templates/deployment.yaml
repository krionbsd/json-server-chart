apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "json-server.fullname" . }}
  labels:
    {{- include "json-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "json-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "json-server.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: download-db
          image: {{ .Values.initContainer.image }}
          command:
            - "sh"
            - "-c"
            - "mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && mc cp minio/${MINIO_BUCKET}/${MINIO_FILE} /data/db.json"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKey
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretKey
            - name: MINIO_BUCKET
              value: {{ .Values.minio.bucket }}
            - name: MINIO_FILE
              value: {{ .Values.minio.file }}
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: /data
          command: ["json-server", "/data/db.json"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          emptyDir: {}
